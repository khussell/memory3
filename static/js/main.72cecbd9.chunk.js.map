{"version":3,"sources":["components/Header.js","components/Character.js","components/Game.js","components/Footer.js","components/Instructions.js","components/Info.js","App.js","index.js"],"names":["Header","showInstructions","console","log","instruct","document","querySelector","style","display","addEventListener","addOrRemove","removeEventListener","react_default","a","createElement","className","backgroundColor","letterSpacing","color","marginLeft","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","textAlign","id","onClick","this","props","score","highScore","React","Component","Character","state","clicked","_this2","alt","handleClick","margin","padding","width","src","image","Game","_this","marginTop","characters","map","char","components_Character","key","Footer","height","border","Instructions","position","zIndex","Info","App","i","length","setState","showInfo","whatHappened","info","infoP","innerHTML","emptyDiv","getElementsByClassName","shuffled","array","temporaryValue","randomIndex","arrayLength","Math","floor","random","shuffle","components_Header","components_Instructions","components_Info","components_Game","components_Footer","ReactDOM","render","src_App","getElementById"],"mappings":"uKA+CeA,6MA1CXC,iBAAmB,WACfC,QAAQC,IAAI,MACZ,IAAMC,EAAWC,SAASC,cAAc,aACxCF,EAASG,MAAMC,QAAS,QAUxBH,SAASI,iBAAiB,QARN,SAAdC,IAC4B,UAA3BN,EAASG,MAAMC,UACdJ,EAASG,MAAMC,QAAU,OACzBH,SAASM,oBAAoB,QAASD,+EAa9C,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDAAkDR,MAAO,CAACS,gBAAiB,YACtFJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBR,MAAO,CAACU,cAAe,EAAGC,MAAO,QAASC,WAAY,sBAA9F,mBACAP,EAAAC,EAAAC,cAAA,UAAQP,MAAO,CAACS,gBAAiB,SAAUD,UAAU,iBAAiBK,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBAC3Lb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAE5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CAA+CR,MAAO,CAACmB,UAAU,SAAUC,GAAG,aACjFf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAWH,EAAAC,EAAAC,cAAA,UAAQa,GAAG,SAASC,QAASC,KAAK5B,kBAAlC,iBACzBW,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,UAAiCc,KAAKC,MAAMC,OAC5CnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,gBAAuCc,KAAKC,MAAME,qBAjCrDC,IAAMC,WCkBZC,6MAfXC,MAAM,CACJC,SAAS,2EAGF,IAAAC,EAAAT,KACL,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,OAAMC,UAAU,SAASwB,IAAI,OAAOX,QAAS,kBAAMU,EAAKR,MAAMU,YAAYF,EAAKR,MAAMH,KAAKpB,MAAO,CAACkC,OAAQ,GAC5GzB,gBAAiB,QAAS0B,QAAS,GAAIC,MAAM,MAAOC,IAAKf,KAAKC,MAAMe,gBATxDZ,IAAMC,WCkBfY,mLAfF,IAAAC,EAAAlB,KAGL,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKP,MAAO,CAAEyC,UAAW,IAAMjC,UAAU,OACpCc,KAAKC,MAAMmB,WAAWC,IAAI,SAAAC,GACvB,OAAQvC,EAAAC,EAAAC,cAACsC,EAAD,CAAWZ,YAAaO,EAAKjB,MAAMU,YAAaa,IAAKF,EAAKxB,GAAIA,GAAIwB,EAAKxB,GAAIkB,MAAOM,EAAKN,MAAOR,QAASc,EAAKd,qBAVzHJ,IAAMC,WCQVoB,mLATP,OACI1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAmCR,MAAO,CAACS,gBAAiB,UAAWuC,OAAQ,GAC9FC,OAAQ,4BAJCvB,IAAMC,WCUZuB,mLARP,OACI7C,EAAAC,EAAAC,cAAA,OAAKa,GAAG,WAAWZ,UAAU,QAAQR,MAAO,CAACmD,SAAU,WAAYC,OAAQ,EAAG3C,gBAAiB,QAASR,QAAS,SAC7GI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,2JAJWkB,IAAMC,WCYlB0B,mLAVP,OACIhD,EAAAC,EAAAC,cAAA,OAAKa,GAAG,OAAOZ,UAAU,+BAA+BR,MAAO,CAACmD,SAAU,WAAYC,OAAQ,EAAG3C,gBAAiB,QAASR,QAAS,SAChII,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,KAAGa,GAAG,mBALHM,IAAMC,kBCkIV2B,6MA3HbzB,MAAQ,CACNL,MAAO,EACPC,UAAW,KAObQ,YAAc,SAACb,GACb,IAAK,IAAImC,EAAI,EAAGA,EAAIb,EAAWc,OAAQD,IACrC,GAAIb,EAAWa,GAAGnC,KAAOA,EACvB,IAA8B,IAA1BsB,EAAWa,GAAGzB,QAChBY,EAAWa,GAAGzB,SAAU,EACpBU,EAAKX,MAAML,MAAQ,KACrBgB,EAAKiB,SAAS,CAAEjC,MAAOgB,EAAKX,MAAML,MAAQ,IAC1C7B,QAAQC,IAAI4C,EAAKX,MAAML,OACE,KAArBgB,EAAKX,MAAML,OACbgB,EAAKkB,SAAS,YAGb,CACDlB,EAAKX,MAAML,MAAQgB,EAAKX,MAAMJ,WAChCe,EAAKiB,SAAS,CAAEhC,UAAWe,EAAKX,MAAML,QACtCgB,EAAKkB,SAAS,cAEdlB,EAAKkB,SAAS,QAEhBlB,EAAKiB,SAAS,CAAEjC,MAAO,IACvB,IAAK,IAAI+B,EAAI,EAAGA,EAAIb,EAAWc,OAAQD,IACrCb,EAAWa,GAAGzB,SAAU,MASlC4B,SAAW,SAACC,GACVhE,QAAQC,IAAI,MACZ,IAAMgE,EAAO9D,SAASC,cAAc,SAC9B8D,EAAQ/D,SAASC,cAAc,UACrC6D,EAAK5D,MAAMC,QAAU,QAGrB,IAAME,EAAc,SAAdA,IACuB,UAAvByD,EAAK5D,MAAMC,UACb2D,EAAK5D,MAAMC,QAAU,OACrBH,SAASM,oBAAoB,QAASD,KAK1C,OAAQwD,GACN,IAAK,MACHE,EAAMC,UAAY,aAClBhE,SAASI,iBAAiB,QAASC,GACnC,MACF,IAAK,OACH0D,EAAMC,UAAY,cAClBhE,SAASI,iBAAiB,QAASC,GACnC,MACF,IAAK,YACH0D,EAAMC,UAAY,yCAClBhE,SAASI,iBAAiB,QAASC,GACnC,MACF,QACE,OAAOR,QAAQC,IAAI,UAQzBmE,SAAW,WACUjE,SAASkE,uBAAuB,cACtCF,UAAY,4EAKzBxC,KAAKyC,WAGL,IAsBIE,EAtBY,SAAAC,GAOd,IALA,IACIC,EACAC,EAFAC,EAAcH,EAAMV,OAKjBa,EAAc,GAEnBD,EAAcE,KAAKC,MAAMD,KAAKE,SAAWH,GAIzCF,EAAiBD,EAHjBG,GAAe,GAIfH,EAAMG,GAAeH,EAAME,GAC3BF,EAAME,GAAeD,EAGvB,OAAOD,EAIMO,CAAQ/B,GAGvB,OACErC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmE,EAAD,CAAQlD,MAAOF,KAAKO,MAAML,MAAOC,UAAWH,KAAKO,MAAMJ,YACvDpB,EAAAC,EAAAC,cAACoE,EAAD,MACAtE,EAAAC,EAAAC,cAACqE,EAAD,MACAvE,EAAAC,EAAAC,cAACsE,EAAD,CAAMrD,MAAOF,KAAKO,MAAML,MAAOC,UAAWH,KAAKO,MAAML,MAAOS,YAAaX,KAAKW,YAAaS,WAAYuB,IACvG5D,EAAAC,EAAAC,cAACuE,EAAD,cAtHUpD,IAAMC,WCFxBoD,IAASC,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAD,MAASnF,SAASoF,eAAe","file":"static/js/main.72cecbd9.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n\r\nclass Header extends React.Component {\r\n   \r\n    showInstructions = () =>{\r\n        console.log(\"hi\")\r\n        const instruct = document.querySelector(\"#instruct\")\r\n        instruct.style.display= \"block\"\r\n\r\n        const addOrRemove = () =>{\r\n            if(instruct.style.display === \"block\"){\r\n                instruct.style.display = \"none\"\r\n                document.removeEventListener(\"click\", addOrRemove)\r\n               \r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"click\", addOrRemove)\r\n        \r\n            \r\n        \r\n    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-light \" style={{backgroundColor: \"#ceaf70\"}}>\r\n                <span className=\"navbar-brand mb-0 h1 \" style={{letterSpacing: 2, color: \"white\", marginLeft: \"calc(50% - 100px)\"}}>Golden Memories</span>\r\n                <button style={{backgroundColor: \"white\"}} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n        <div className=\"collapse navbar-collapse justify-content-end\" style={{textAlign:\"right\"}} id=\"navbarNav\"> \r\n                    <ul className=\"navbar-nav \">\r\n                        <li className=\"nav-item\"><button id=\"button\" onClick={this.showInstructions}>Instructions</button></li>\r\n                        <li className=\"nav-item\">Score: {this.props.score}</li>\r\n                        <li className=\"nav-item\"> High Score: {this.props.highScore}</li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Header","import React from \"react\"\r\n\r\n\r\n\r\n\r\nclass Character extends React.Component{\r\n    state={\r\n      clicked: false\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"col-4 col-sm-3 col-md-3  col-lg-3 \">\r\n              <img  className=\"images\" alt=\"Lilu\" onClick={() => this.props.handleClick(this.props.id)} style={{margin: 20,\r\n            backgroundColor: \"white\", padding: 5}} width=\"70%\"  src={this.props.image}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Character","import React from \"react\"\r\nimport Character from \"./Character\"\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n   \r\n\r\n    render() {\r\n       \r\n\r\n        return (\r\n            <div className=\"container needsEmpty\">\r\n                <div style={{ marginTop: 60 }} className=\"row\">\r\n                    {this.props.characters.map(char => {\r\n                        return (<Character handleClick={this.props.handleClick} key={char.id} id={char.id} image={char.image} clicked={char.clicked} />)\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game","import React from \"react\"\r\n\r\nclass Footer extends React.Component{\r\n    render() {\r\n        return(\r\n            <nav className=\"navbar navbar-light fixed-bottom\" style={{backgroundColor: \"#ceaf70\", height: 30,\r\n            border: \"3px solid white\"}}>\r\n</nav>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Footer","import React from \"react\"\r\n\r\nclass Instructions extends React.Component{\r\n    render() {\r\n        return(\r\n            <div id=\"instruct\" className=\"popup\" style={{position: \"absolute\", zIndex: 3, backgroundColor: \"white\", display: \"none\"}}>\r\n                <p className=\"instructP\">This game will challenge your memory. Everytime the images shuffle you will click an image you HAVE NOT clicked yet. If you get all 12 you win!</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Instructions","import React from \"react\"\r\n\r\nclass Info extends React.Component{\r\n    render() {\r\n        return (\r\n            <div id=\"info\" className=\"popup row align-items-center\" style={{position: \"absolute\", zIndex: 3, backgroundColor: \"white\", display: \"none\"}}>\r\n                <div className=\"col\">\r\n                <p id=\"infoP\" ></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Info","import React from 'react';\nimport Header from \"./components/Header\"\nimport Game from \"./components/Game\"\nimport Footer from \"./components/Footer\"\nimport Instructions from \"./components/Instructions\"\nimport Info from \"./components/Info\"\nimport characters from \"./pics.json\"\n\nclass App extends React.Component {\n  state = {\n    score: 0,\n    highScore: 0\n  }\n\n  //when a picture is clicked that pic property of clicked will change to true unless it is already true\n  //if it was false a point will be added\n  //if it was true the player will lose and score will be compared to high score\n  //function will be called to show info to player about win/lose/high score\n  handleClick = (id) => {\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i].id === id) {\n        if (characters[i].clicked === false) {\n          characters[i].clicked = true\n          if (this.state.score < 12) {\n            this.setState({ score: this.state.score + 1 })\n            console.log(this.state.score)\n            if (this.state.score === 11) {\n              this.showInfo(\"win\")\n            }\n          }\n        } else {\n          if (this.state.score > this.state.highScore) {\n            this.setState({ highScore: this.state.score })\n            this.showInfo(\"highScore\")\n          } else {\n            this.showInfo(\"lost\")\n          }\n          this.setState({ score: 0 })\n          for (let i = 0; i < characters.length; i++) {\n            characters[i].clicked = false\n          }\n\n        }\n      }\n    }\n  }\n\n  //will show player that they won/lost/high score\n  showInfo = (whatHappened) => {\n    console.log(\"hi\")\n    const info = document.querySelector(\"#info\")\n    const infoP = document.querySelector(\"#infoP\")\n    info.style.display = \"block\"\n\n\n    const addOrRemove = () => {\n      if (info.style.display === \"block\") {\n        info.style.display = \"none\"\n        document.removeEventListener(\"click\", addOrRemove)\n      }\n    }\n\n\n    switch (whatHappened) {\n      case \"win\":\n        infoP.innerHTML = \"You WON!!!\";\n        document.addEventListener(\"click\", addOrRemove)\n        break;\n      case \"lost\":\n        infoP.innerHTML = \"You Lost!!!\";\n        document.addEventListener(\"click\", addOrRemove)\n        break;\n      case \"highScore\":\n        infoP.innerHTML = \"You lost, but made a new high score!!!\";\n        document.addEventListener(\"click\", addOrRemove)\n        break;\n      default:\n        return console.log(\"hi\")\n    }\n\n  }\n\n\n\n//emptying the div when a pic is clicked\n  emptyDiv = () => {\n    let emptyThisDiv = document.getElementsByClassName(\"needsEmpty\")\n    emptyThisDiv.innerHTML = \"\"\n  }\n\n  render() {\n\n    this.emptyDiv()\n\n    //shuffling characters array\n    const shuffle = array => {\n\n      let arrayLength = array.length;\n      let temporaryValue;\n      let randomIndex;\n\n    \n      while (arrayLength > 0) {\n        //Finding random index\n        randomIndex = Math.floor(Math.random() * arrayLength);\n        arrayLength -= 1;\n\n      //switching things around\n        temporaryValue = array[arrayLength];\n        array[arrayLength] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n\n    };\n\n    var shuffled = shuffle(characters)\n\n\n    return (\n      <div>\n        <Header score={this.state.score} highScore={this.state.highScore} />\n        <Instructions />\n        <Info />\n        <Game score={this.state.score} highScore={this.state.score} handleClick={this.handleClick} characters={shuffled} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}